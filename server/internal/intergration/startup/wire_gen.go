// Code generated by Wire. DO NOT EDIT.

//go:generate go run -mod=mod github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package startup

import (
	"github.com/gin-gonic/gin"
	"github.com/google/wire"
	"github.com/huangyul/book-server/internal/pkg/jwt"
	"github.com/huangyul/book-server/internal/repository"
	"github.com/huangyul/book-server/internal/repository/dao"
	"github.com/huangyul/book-server/internal/service"
	"github.com/huangyul/book-server/internal/web"
	"github.com/huangyul/book-server/ioc"
)

// Injectors from wire.go:

func InitWebServer() *gin.Engine {
	db := InitDB()
	userDao := dao.NewGORMUserDao(db)
	userRepository := repository.NewUserRepository(userDao)
	userService := service.NewUserService(userRepository)
	jwtJWT := jwt.NewJwtService()
	userHandler := web.NewUserHandler(userService, jwtJWT)
	v := ioc.InitWebMiddlewares(jwtJWT)
	engine := ioc.InitWeb(userHandler, v)
	return engine
}

func InitUserHandler() *web.UserHandler {
	db := InitDB()
	userDao := dao.NewGORMUserDao(db)
	userRepository := repository.NewUserRepository(userDao)
	userService := service.NewUserService(userRepository)
	jwtJWT := jwt.NewJwtService()
	userHandler := web.NewUserHandler(userService, jwtJWT)
	return userHandler
}

// wire.go:

var thirdParty = wire.NewSet(
	InitDB,
)

var userSet = wire.NewSet(dao.NewGORMUserDao, repository.NewUserRepository, service.NewUserService, web.NewUserHandler)
